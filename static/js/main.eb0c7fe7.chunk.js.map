{"version":3,"sources":["logo.svg","componentes/Header.js","componentes/Formulario.js","componentes/Error.js","componentes/Clima.js","componentes/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","titulo","Formulario","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ciudadRef","React","createRef","paisRef","buscarClima","e","preventDefault","respuesta","ciudad","current","value","pais","setState","condicion","datosConsulta","mostraTexto","state","onSubmit","id","type","ref","htmlFor","defaultValue","Component","Error","mensaje","Clima","mostrarResultado","_this$props$resultado","resultado","name","weather","main","urlIcono","concat","icon","alt","temp","toFixed","src","temp_max","temp_min","console","log","App","error","consulta","consultarApi","_this$state$consulta","url","fetch","then","res","json","datos","catch","prevProps","prevState","cod","componentes_Error","componentes_Clima","componentes_Header","componentes_Formulario","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb0c7fe7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <div className=\"nav-wrapper light-blue darken-2\">\r\n                    <a className=\"brand-logo\">{props.titulo}</a>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Formulario extends React.Component{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            condicion: false\r\n        };\r\n    }\r\n\r\n    ciudadRef = React.createRef();\r\n    paisRef = React.createRef();\r\n\r\n    buscarClima= (e) => {\r\n        e.preventDefault();\r\n\r\n        const respuesta = {\r\n            ciudad: this.ciudadRef.current.value,\r\n            pais:this.paisRef.current.value\r\n        };\r\n\r\n        //console.log(respuesta);\r\n        this.setState({condicion:true});\r\n\r\n        this.props.datosConsulta(respuesta);\r\n        \r\n        \r\n    }\r\n\r\n    mostraTexto = () =>\r\n    {\r\n\r\n        if(!this.state.condicion){\r\n            return(\r\n                <span>CHAO</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <span>HOLA</span>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"contenedor-form\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <form onSubmit={this.buscarClima}>\r\n                            {this.mostraTexto()}\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                                <input id=\"ciudad\" type=\"text\" ref={this.ciudadRef}></input>\r\n                                <label htmlFor=\"ciudad\">Ciudad:</label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                            \r\n                                <select htmlFor=\"pais\" ref={this.paisRef}>\r\n                                    <option value=\"\" defaultValue>Selecciona un país</option>\r\n                                    <option value=\"MX\">México</option>\r\n                                    <option value=\"CL\">Chile</option>\r\n                                    <option value=\"AR\">Argentina</option>\r\n                                </select>\r\n                                <label htmlFor=\"pais\">País:</label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2 buscador\">\r\n                            \r\n                                <input type=\"submit\" className=\"waves-effect waves-light btn-large yellow accent-4\" value=\"Buscar...\"></input>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nFormulario.propTypes = {\r\n    datosConsulta: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = (props) =>{\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6 offset-m3\">\r\n                    <div className=\"card-panel red darken-4 error\">\r\n                        {props.mensaje}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Error;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Clima extends Component{\r\n\r\n    mostrarResultado = () =>{\r\n\r\n        const {name,weather,main} =this.props.resultado;\r\n\r\n        if(!name || !weather || !main) return null;\r\n\r\n        const kelvin = 273.15;\r\n\r\n        const urlIcono = `http://openweathermap.org/img/w/${weather[0].icon}.png`;\r\n        const alt = `clima de ${name}`;\r\n\r\n        return(\r\n            <div className=\"row\">\r\n                    <div className=\"resultado col s12 m8 l6 offset-m2 offset-l3\">\r\n                         <div className=\"card-panel light-blue align-center\">\r\n                              <span className=\"white-text\">\r\n                                   <h2>Resultado Clima de: {name}</h2>\r\n                                   <p className=\"temperatura\">\r\n                                        Actual: { (main.temp - kelvin).toFixed(2) } &deg;C\r\n                                        <img src={urlIcono} alt={alt} />\r\n                                   </p>\r\n                                   <p> Max. {main.temp_max - kelvin} &deg;C</p>\r\n                                   <p> Min. {main.temp_min - kelvin} &deg;C</p>\r\n                                   \r\n                              </span>\r\n                         </div>    \r\n                    </div>\r\n               </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        console.log(this.props.resultado);\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                {this.mostrarResultado()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nClima.propTypes = {\r\n    resultado: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Clima;","import React, { Component } from 'react';\nimport logo from '../logo.svg';\nimport '../css/App.css';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Error from './Error';\nimport Clima from './Clima';\n\nclass App extends Component {\n\n  state = {\n    error:false,\n    consulta:{},\n    resultado: {}\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    //this.consultarApi();\n\n    if(prevState.consulta !== this.state.consulta) {\n      this.consultarApi();\n    } \n  }\n\n  componentDidMount(){\n    this.setState({\n      error: false\n    });\n  }\n\n  consultarApi = ()=>{\n    const {ciudad,pais} = this.state.consulta;\n\n    if(!ciudad || !pais) return null;\n\n    const appId = '81af9aad9d10d759a0c877bc1765f9c0';\n    let url = 'http://api.openweathermap.org/data/2.5/weather?q=' + ciudad + ',' + pais + '%20montt&appid=' + appId;\n\n    fetch(url).then(res =>{\n      return res.json();\n    }).then(datos => {\n      this.setState({\n        resultado: datos\n      });\n    }).catch(error =>{\n      console.log(error);\n    });\n\n    console.log(url);\n  }\n\n  datosConsulta = respuesta =>{\n    if(respuesta.ciudad === '' || respuesta.pais === '')\n    {\n      console.log(\"Debe ingresar los datos.\");\n      this.setState(\n        {error: true}\n      );\n    }else{\n      this.setState(\n        {\n          error:false,\n          consulta: respuesta\n        }\n      );\n    }\n    \n  }\n\n  render() {\n\n    const {error} = this.state,\n          {cod} = this.state.resultado;\n\n    let resultado;\n\n    if(error){\n      resultado=<Error mensaje=\"Ambos campos son obligatorios.\"></Error>\n    }else if(cod === \"404\"){\n      resultado=<Error mensaje=\"Ciudad no encontrada.\"></Error>\n    }\n    else{\n      resultado=<Clima resultado={this.state.resultado}></Clima>;\n    }\n\n    return (\n      <div className=\"app\">\n        <Header\n          titulo=\"Clima React\"\n        ></Header>\n        <Formulario \n          datosConsulta={this.datosConsulta}\n        ></Formulario>\n        {resultado}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}